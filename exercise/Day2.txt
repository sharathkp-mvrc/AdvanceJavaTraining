https://quizizz.com/join?gc=457264
    
    
    
    

package com.training.org;

public class ZOrganization {
    public static void main(String[] args) {

         Employee e1=new Employee();
        // e1.showEmployeeDetails();
        System.out.println(e1);

         Employee e2=new Employee(101,"EShan",10000);
         //e2.showEmployeeDetails();
        System.out.println(e2);


         Employee e3=new Employee();
         e3.acceptEmployeeDeatails();
        System.out.println(e3.getSalary());
         //e3.showEmployeeDetails();
        System.out.println(e3);




//        Employee e2=new Employee(101,"EShan",10000);
//        e2.setSalary(e2.getSalary()+5000);
//        e2.showEmployeeDetails();
//
//        Bank bank1=new Bank();
//        bank1.showBankDeatils();
//
//        Bank bank2=new Bank("AXIS","12343453","SAVING",23423);
//        bank2.showBankDeatils();
    }
}






package com.training.org;

import java.util.Scanner;

public class Employee {
    private int empId;
    private String name;
    private double salary;

    public Employee(){
        System.out.println("Default constructor of Employee is called");
        empId=0;
        name="";
        salary=0;
    }

    public Employee(int empId, String name, double salary) {
        System.out.println("Parameterised constructor of Employee is called");
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }

    //setters
    public void setSalary(double salary){
        this.salary=salary;
    }

    //getters
    public double getSalary(){
        return salary;
    }

    public void acceptEmployeeDeatails(){
        Scanner input=new Scanner(System.in);
        System.out.println("Enter empId");
        empId=Integer.parseInt(input.nextLine());

        System.out.println("Enter name");
        name=input.nextLine();

        System.out.println("Enter salary");
        salary=input.nextDouble();
    }

    @Override
    public String toString() {
        return "Employee{" +
                "empId=" + empId +
                ", name='" + name + '\'' +
                ", salary=" + salary +
                '}';
    }


//    public void showEmployeeDetails(){
//        System.out.println("Employee details are"+empId+" Name :- "+name+" Salary :- "+salary);
//    }
}






if salary < 40000
apply 5% increment 

if salary >=40000 & <50000
7% increment

if salary >=50000 & <70000
10% increment

if salary >=70000
15% increment 









package com.training.org;

public class ZOrganization {
    public static void main(String[] args) {

         Employee e1=new Employee();
         e1.showEmployeeDetails();

         Employee e2=new Employee(101,"EShan",10000);
         e2.showEmployeeDetails();


         Employee e3=new Employee();
         e3.acceptEmployeeDeatails();
         e3.showEmployeeDetails();




//        Employee e2=new Employee(101,"EShan",10000);
//        e2.setSalary(e2.getSalary()+5000);
//        e2.showEmployeeDetails();
//
//        Bank bank1=new Bank();
//        bank1.showBankDeatils();
//
//        Bank bank2=new Bank("AXIS","12343453","SAVING",23423);
//        bank2.showBankDeatils();
    }
}


package com.training.org;

import java.util.Scanner;

public class Employee {
    private int empId;
    private String name;
    private double salary;

    public Employee(){
        System.out.println("Default constructor of Employee is called");
        empId=0;
        name="";
        salary=0;
    }

    public Employee(int empId, String name, double salary) {
        System.out.println("Parameterised constructor of Employee is called");
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }

    //setters
    public void setSalary(double salary){
        this.salary=salary;
    }

    //getters
    public double getSalary(){
        return salary;
    }

    public void acceptEmployeeDeatails(){
        Scanner input=new Scanner(System.in);
        System.out.println("Enter empId");
        empId=Integer.parseInt(input.nextLine());

        System.out.println("Enter name");
        name=input.nextLine();

        System.out.println("Enter salary");
        salary=input.nextDouble();
    }

    public void showEmployeeDetails(){
        System.out.println("Employee details are"+empId+" Name :- "+name+" Salary :- "+salary);
    }
}







package com.training.org;

public class Bank {
    private String bankName;
    private String accountNo;
    private String typeOfAccount;
    private double balance;

    public Bank(){
        System.out.println("Default constructor of Bank is called");
        bankName="";
        accountNo="";
        typeOfAccount="";
        balance=0;
    }

    public Bank(String bankName, String accountNo, String typeOfAccount, double balance) {
        System.out.println("Parameterised consstructor of Bank is called");
        this.bankName = bankName;
        this.accountNo = accountNo;
        this.typeOfAccount = typeOfAccount;
        this.balance = balance;
    }

    public void showBankDeatils(){
        System.out.println("Bank details "+bankName+" Acccount No"+accountNo+" Type of account"+typeOfAccount+" Balance"+balance);
    }
}





package com.training.org;

public class ZOrganization {
    public static void main(String[] args) {
        Employee e1=new Employee();
        e1.showEmployeeDetails();

        Employee e2=new Employee(101,"EShan",10000);
        e2.setSalary(e2.getSalary()+5000);
        e2.showEmployeeDetails();

        Bank bank1=new Bank();
        bank1.showBankDeatils();

        Bank bank2=new Bank("AXIS","12343453","SAVING",23423);
        bank2.showBankDeatils();
    }
}





package com.training.org;
public class Employee {
    private int empId;
    private String name;
    private double salary;

    public Employee(){
        System.out.println("Default constructor of Employee is called");
        empId=0;
        name="";
        salary=0;
    }

    public Employee(int empId, String name, double salary) {
        System.out.println("Parameterised constructor of Employee is called");
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }

    //setters
    public void setSalary(double salary){
        this.salary=salary;
    }

    //getters
    public double getSalary(){
        return salary;
    }

    public void showEmployeeDetails(){
        System.out.println("Employee details are"+empId+" Name :- "+name+" Salary :- "+salary);
    }
}





Customer

custId
custName
custAddress
custMobileNo

default constructor 
parameterised constrctor

showCustomerDetails








package com.training.org;

public class ZOrganization {
    public static void main(String[] args) {
        Employee e1=new Employee();
        e1.showEmployeeDetails();
    }
}





package com.training.org;
public class Employee {
    private int empId;
    private String name;
    private double salary;

    public Employee(){
        System.out.println("Default constructor of Employee is called");
        empId=0;
        name="";
        salary=0;
    }
    public Employee(int empId, String name, double salary) {
        System.out.println("Parameterised constructor of Employee is called");
        this.empId = empId;
        this.name = name;
        this.salary = salary;
    }
    public void showEmployeeDetails(){
        System.out.println("Employee details are"+empId+" Name :- "+name+" Salary :- "+salary);
    }
}






class ClassName [Pascal case]{
	
	Member variables as private using camel case notation
	
	default constructor as public using same class name
	Parameterised constructor as public using same class name
	
	setters as public using set.... name [camel case]
	getters as public using get.... name [camel case]

	Behaviours as public using camel case notation
}





package com.training.org;

public class Complex {
    private int real;
    private int imag;

    public void showValues(){
        System.out.println("REAL "+real+" Imag"+imag);
    }

    public static void main(String[] args) {
        Complex c1=new Complex();
        c1.showValues();
    }

}






The responsibility of an object is the role it serves within the system.





Identity is that property of an object which distinguishes it from all other objects.






Behavior is how an object acts or reacts, in terms of its state changes and operations performed upon it.





The state of an object encompasses the current values of all its attributes. 
An attribute can be static or dynamic.





An object is an entity that has well defined structure and behavior.
Characteristics of an object
State
Behavior
Identity
Responsibility






String message="JAVA programming";
        String reversedString="";
        int i=message.length()-1;
        do{
            reversedString+=message.charAt(i);
            i--;
        }while (i>=0);

        System.out.println("Reversed String "+reversedString);
        
        
        
        
        


String name[]={"Chiku","Annu","Mannnu","Chintu","Pappu"};
        String message="Hello World";
        for(String str:name)
            System.out.println(str);

        for(char ch:message.toCharArray())
            System.out.println(ch);
            
            
            


int i=0;
        for(;i<=10;){
//            if(i>10){
//                break;
//            }
            System.out.println("Value of i"+i);
            i++;
        }
        
        
        
        
        
        


Scanner input=new Scanner(System.in);
        System.out.println("Enter first number");
        int num1=input.nextInt();
        char ch;

        System.out.println("Enter second number");
        int num2=input.nextInt();

        int choice;
        do{
            System.out.println("1] Addition\n2] Subtraction\n3] Mulitplication\n4] Division\n\nEnter your choice\n");
            choice=input.nextInt();

            switch (choice){
                case 1:
                    System.out.println("Addition -> "+(num1+num2));
                    break;

                case 2:
                    System.out.println("Subtraction -> "+(num1-num2));
                    break;
                case 3:
                    System.out.println("Multiplcation -> "+(num1*num2));
                    break;
                case 4:
                    System.out.println("Division -> "+(float)(num1/(float)num2));
                    break;
            }

            System.out.println("Do you want to continue....");
            ch=input.next().charAt(0);

        }while(ch=='Y'||ch=='y');
        
        
        
        
        
        
        



        int i=0;
        do{
            System.out.println("Value of i "+i);
            i++;
        }while(i<=10);

        
        
        



package com.training.org;

import java.util.Scanner;

public class WhileExample {
    public static void main(String[] args) {

        int sum=0;
        Scanner input=new Scanner(System.in);
        System.out.println("Enter number of iterations");
        int number=input.nextInt();

        while(number>=0){
            sum+=number;
            number--;
        }

        System.out.println("sum of elements "+sum);



//
//            int i=10;
//            while (i>=0){
//                System.out.println("Value of i"+i);
//                i--;
//            }



  //      System.out.print("Printing.");
//        while(true){
//            System.out.print("..");
//        }


//        int i=0;  //initialization
//        while(i<=10){    //condition
//            System.out.println("Value of i "+i);
//            i+=2;  //increment
//        }
    }
}
